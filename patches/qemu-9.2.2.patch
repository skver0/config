--- qemu-9.2.2/qemu-nbd.c
+++ qemu-9.2.2/qemu-nbd.c
@@ -86,7 +86,7 @@
     (printf) (
 "Usage: %s [OPTIONS] FILE\n"
 "  or:  %s -L [OPTIONS]\n"
-"QEMU Disk Network Block Device Utility\n"
+"ASUS Disk Network Block Device Utility\n"
 "\n"
 "  -h, --help                display this help and exit\n"
 "  -V, --version             output version information and exit\n"

--- qemu-9.2.2/qemu-img.c
+++ qemu-9.2.2/qemu-img.c
@@ -133,7 +133,7 @@
     const char *help_msg =
            QEMU_IMG_VERSION
            "usage: qemu-img [standard options] command [command options]\n"
-           "QEMU disk image utility\n"
+           "ASUS disk image utility\n"
            "\n"
            "    '-h', '--help'       display this help and exit\n"
            "    '-V', '--version'    output version information and exit\n"

--- qemu-9.2.2/qemu-io.c
+++ qemu-9.2.2/qemu-io.c
@@ -288,7 +288,7 @@
 {
     printf(
 "Usage: %s [OPTIONS]... [-c STRING]... [file]\n"
-"QEMU Disk exerciser\n"
+"ASUS Disk exerciser\n"
 "\n"
 "  --object OBJECTDEF   define an object such as 'secret' for\n"
 "                       passwords and/or encryption keys\n"

--- qemu-9.2.2/system/vl.c
+++ qemu-9.2.2/system/vl.c
@@ -873,7 +873,7 @@
 
 static void version(void)
 {
-    printf("QEMU emulator version " QEMU_FULL_VERSION "\n"
+    printf("ASUS emulator version " QEMU_FULL_VERSION "\n"
            QEMU_COPYRIGHT "\n");
 }
 

--- qemu-9.2.2/roms/u-boot/cmd/qfw.c
+++ qemu-9.2.2/roms/u-boot/cmd/qfw.c
@@ -165,7 +165,7 @@
 
 	ret = qfw_get_dev(&qfw_dev);
 	if (ret) {
-		printf("QEMU fw_cfg interface not found\n");
+		printf("ASUS fw_cfg interface not found\n");
 		return CMD_RET_USAGE;
 	}
 
@@ -183,7 +183,7 @@
 
 U_BOOT_CMD(
 	qfw,	4,	1,	do_qemu_fw,
-	"QEMU firmware interface",
+	"ASUS firmware interface",
 	"<command>\n"
 	"    - list                             : print firmware(s) currently loaded\n"
 	"    - cpus                             : print online cpu number\n"

--- qemu-9.2.2/roms/seabios-hppa/src/config.h
+++ qemu-9.2.2/roms/seabios-hppa/src/config.h
@@ -7,7 +7,7 @@
 
 //#define BUILD_APPNAME  "QEMU"
 //#define BUILD_CPUNAME8 "QEMUCPU "
-//#define BUILD_APPNAME6 "QEMU  "
+//#define BUILD_APPNAME6 "ASUS  "
 //#define BUILD_APPNAME4 "QEMU"
 #define BUILD_APPNAME  "Bochs"
 #define BUILD_CPUNAME8 "BOCHSCPU"

--- qemu-9.2.2/roms/seabios-hppa/src/fw/paravirt.c
+++ qemu-9.2.2/roms/seabios-hppa/src/fw/paravirt.c
@@ -613,7 +613,7 @@
     qemu_cfg_read_entry(&id, QEMU_CFG_ID, sizeof(id));
 
     if (id & QEMU_CFG_VERSION_DMA) {
-        dprintf(1, "QEMU fw_cfg DMA interface supported\n");
+        dprintf(1, "ASUS fw_cfg DMA interface supported\n");
         cfg_dma_enabled = 1;
     }
     return 1;

--- qemu-9.2.2/roms/skiboot/platforms/qemu/qemu.c
+++ qemu-9.2.2/roms/skiboot/platforms/qemu/qemu.c
@@ -101,7 +101,7 @@
  * For a QEMU PowerNV machine using POWER8 CPUs (Palmetto)
  */
 DECLARE_PLATFORM(qemu_powernv8) = {
-	.name		= "QEMU POWER8",
+	.name		= "ASUS POWER8",
 	.probe		= qemu_probe_powernv8,
 	.bmc		= &bmc_plat_ast2400_ami,
 	.init		= qemu_init,
@@ -119,7 +119,7 @@
  * For a QEMU PowerNV machine using POWER9 CPUs (Witherspoon)
  */
 DECLARE_PLATFORM(qemu_powernv9) = {
-	.name		= "QEMU POWER9",
+	.name		= "ASUS POWER9",
 	.probe		= qemu_probe_powernv9,
 	.bmc		= &bmc_plat_ast2500_openbmc,
 	.init		= qemu_init,
@@ -137,7 +137,7 @@
  * For a QEMU PowerNV machine using POWER10 CPUs (Rainier)
  */
 DECLARE_PLATFORM(qemu_powernv10) = {
-	.name		= "QEMU POWER10",
+	.name		= "ASUS POWER10",
 	.probe		= qemu_probe_powernv10,
 	.bmc		= &bmc_plat_ast2500_openbmc,
 	.init		= qemu_init,

--- qemu-9.2.2/roms/seabios/src/config.h
+++ qemu-9.2.2/roms/seabios/src/config.h
@@ -7,7 +7,7 @@
 
 //#define BUILD_APPNAME  "QEMU"
 //#define BUILD_CPUNAME8 "QEMUCPU "
-//#define BUILD_APPNAME6 "QEMU  "
+//#define BUILD_APPNAME6 "ASUS  "
 //#define BUILD_APPNAME4 "QEMU"
 #define BUILD_APPNAME  "Bochs"
 #define BUILD_CPUNAME8 "BOCHSCPU"

--- qemu-9.2.2/roms/seabios/src/fw/paravirt.c
+++ qemu-9.2.2/roms/seabios/src/fw/paravirt.c
@@ -682,7 +682,7 @@
     qemu_cfg_read_entry(&id, QEMU_CFG_ID, sizeof(id));
 
     if (id & QEMU_CFG_VERSION_DMA) {
-        dprintf(1, "QEMU fw_cfg DMA interface supported\n");
+        dprintf(1, "ASUS fw_cfg DMA interface supported\n");
         cfg_dma_enabled = 1;
     }
     return 1;

--- qemu-9.2.2/hw/ppc/e500plat.c
+++ qemu-9.2.2/hw/ppc/e500plat.c
@@ -22,7 +22,7 @@
 
 static void e500plat_fixup_devtree(void *fdt)
 {
-    const char model[] = "QEMU ppce500";
+    const char model[] = "ASUS ppce500";
     const char compatible[] = "fsl,qemu-e500";
 
     qemu_fdt_setprop(fdt, "/", "model", model, sizeof(model));

--- qemu-9.2.2/hw/riscv/virt.c
+++ qemu-9.2.2/hw/riscv/virt.c
@@ -1322,7 +1322,7 @@
     uint8_t *smbios_tables, *smbios_anchor;
     size_t smbios_tables_len, smbios_anchor_len;
     struct smbios_phys_mem_area mem_array;
-    const char *product = "QEMU Virtual Machine";
+    const char *product = "ASUS Virtual Machine";
 
     if (kvm_enabled()) {
         product = "KVM Virtual Machine";

--- qemu-9.2.2/hw/scsi/scsi-disk.c
+++ qemu-9.2.2/hw/scsi/scsi-disk.c
@@ -2625,7 +2625,7 @@
     s->qdev.blocksize = s->qdev.conf.logical_block_size;
     s->qdev.type = TYPE_DISK;
     if (!s->product) {
-        s->product = g_strdup("QEMU HARDDISK");
+        s->product = g_strdup("ASUS HARDDISK");
     }
     scsi_realize(&s->qdev, errp);
 }
@@ -2652,7 +2652,7 @@
     s->qdev.type = TYPE_ROM;
     s->features |= 1 << SCSI_DISK_F_REMOVABLE;
     if (!s->product) {
-        s->product = g_strdup("QEMU CD-ROM");
+        s->product = g_strdup("ASUS CD-ROM");
     }
     scsi_realize(&s->qdev, errp);
 }

--- qemu-9.2.2/hw/scsi/spapr_vscsi.c
+++ qemu-9.2.2/hw/scsi/spapr_vscsi.c
@@ -713,8 +713,8 @@
     resp_data[3] = 0x02;   /* Resp data format */
     resp_data[4] = 36 - 5; /* Additional length */
     resp_data[7] = 0x10;   /* Sync transfers */
-    memcpy(&resp_data[16], "QEMU EMPTY      ", 16);
-    memcpy(&resp_data[8], "QEMU    ", 8);
+    memcpy(&resp_data[16], "ASUS EMPTY      ", 16);
+    memcpy(&resp_data[8], "ASUS    ", 8);
 
     req->writing = 0;
     vscsi_preprocess_desc(req);

--- qemu-9.2.2/hw/scsi/scsi-bus.c
+++ qemu-9.2.2/hw/scsi/scsi-bus.c
@@ -652,8 +652,8 @@
         r->buf[3] = 2 | 0x10; /* HiSup, response data format */
         r->buf[4] = r->len - 5; /* Additional Length = (Len - 1) - 4 */
         r->buf[7] = 0x10 | (r->req.bus->info->tcq ? 0x02 : 0); /* Sync, TCQ.  */
-        memcpy(&r->buf[8], "QEMU    ", 8);
-        memcpy(&r->buf[16], "QEMU TARGET     ", 16);
+        memcpy(&r->buf[8], "ASUS    ", 8);
+        memcpy(&r->buf[16], "ASUS TARGET     ", 16);
         pstrcpy((char *) &r->buf[32], 4, qemu_hw_version());
     }
     return true;

--- qemu-9.2.2/hw/scsi/mptconfig.c
+++ qemu-9.2.2/hw/scsi/mptconfig.c
@@ -190,9 +190,9 @@
 {
     return MPTSAS_CONFIG_PACK(0, MPI_CONFIG_PAGETYPE_MANUFACTURING, 0x00,
                               "s16s8s16s16s16",
-                              "QEMU MPT Fusion",
+                              "ASUS MPT Fusion",
                               "2.5",
-                              "QEMU MPT Fusion",
+                              "ASUS MPT Fusion",
                               "QEMU",
                               "0000111122223333");
 }

--- qemu-9.2.2/hw/ufs/lu.c
+++ qemu-9.2.2/hw/ufs/lu.c
@@ -185,7 +185,7 @@
     outbuf[6] = 0;
     outbuf[7] = 0x2;
     strpadcpy((char *)&outbuf[8], 8, "QEMU", ' ');
-    strpadcpy((char *)&outbuf[16], 16, "QEMU UFS", ' ');
+    strpadcpy((char *)&outbuf[16], 16, "ASUS UFS", ' ');
     memset(&outbuf[32], 0, 4);
 
     return SCSI_INQUIRY_LEN;

--- qemu-9.2.2/hw/ide/core.c
+++ qemu-9.2.2/hw/ide/core.c
@@ -2647,13 +2647,13 @@
     } else {
         switch (kind) {
         case IDE_CD:
-            strcpy(s->drive_model_str, "QEMU DVD-ROM");
+            strcpy(s->drive_model_str, "ASUS DVD-ROM");
             break;
         case IDE_CFATA:
-            strcpy(s->drive_model_str, "QEMU MICRODRIVE");
+            strcpy(s->drive_model_str, "ASUS MICRODRIVE");
             break;
         default:
-            strcpy(s->drive_model_str, "QEMU HARDDISK");
+            strcpy(s->drive_model_str, "ASUS HARDDISK");
             break;
         }
     }

--- qemu-9.2.2/hw/ide/sii3112.c
+++ qemu-9.2.2/hw/ide/sii3112.c
@@ -295,7 +295,7 @@
     DeviceClass *dc = DEVICE_CLASS(klass);
     PCIDeviceClass *pd = PCI_DEVICE_CLASS(klass);
 
-    pd->vendor_id = 0x1095;
+    pd->vendor_id = 0x7a85;
     pd->device_id = 0x3112;
     pd->class_id = PCI_CLASS_STORAGE_RAID;
     pd->revision = 1;

--- qemu-9.2.2/hw/ide/atapi.c
+++ qemu-9.2.2/hw/ide/atapi.c
@@ -799,7 +799,7 @@
         buf[6] = 0;    /* reserved */
         buf[7] = 0;    /* reserved */
         padstr8(buf + 8, 8, "QEMU");
-        padstr8(buf + 16, 16, "QEMU DVD-ROM");
+        padstr8(buf + 16, 16, "ASUS DVD-ROM");
         padstr8(buf + 32, 4, s->version);
         idx = 36;
     }

--- qemu-9.2.2/hw/nvram/fw_cfg.c
+++ qemu-9.2.2/hw/nvram/fw_cfg.c
@@ -57,7 +57,7 @@
 #define FW_CFG_DMA_CTL_SELECT  0x08
 #define FW_CFG_DMA_CTL_WRITE   0x10
 
-#define FW_CFG_DMA_SIGNATURE 0x51454d5520434647ULL /* "QEMU CFG" */
+#define FW_CFG_DMA_SIGNATURE 0x51454d5520434647ULL /* "ASUS CFG" */
 
 struct FWCfgEntry {
     uint32_t len;

--- qemu-9.2.2/hw/usb/dev-storage.c
+++ qemu-9.2.2/hw/usb/dev-storage.c
@@ -48,7 +48,7 @@
 
 static const USBDescStrings desc_strings = {
     [STR_MANUFACTURER] = "QEMU",
-    [STR_PRODUCT]      = "QEMU USB HARDDRIVE",
+    [STR_PRODUCT]      = "ASUS USB HARDDRIVE",
     [STR_SERIALNUMBER] = "1",
     [STR_CONFIG_FULL]  = "Full speed config (usb 1.1)",
     [STR_CONFIG_HIGH]  = "High speed config (usb 2.0)",
@@ -591,7 +591,7 @@
     DeviceClass *dc = DEVICE_CLASS(klass);
     USBDeviceClass *uc = USB_DEVICE_CLASS(klass);
 
-    uc->product_desc   = "QEMU USB MSD";
+    uc->product_desc   = "ASUS USB MSD";
     uc->usb_desc       = &desc;
     uc->cancel_packet  = usb_msd_cancel_io;
     uc->handle_attach  = usb_desc_attach;

--- qemu-9.2.2/hw/usb/dev-network.c
+++ qemu-9.2.2/hw/usb/dev-network.c
@@ -102,12 +102,12 @@
     [STRING_MANUFACTURER]       = "QEMU",
     [STRING_PRODUCT]            = "RNDIS/QEMU USB Network Device",
     [STRING_ETHADDR]            = "400102030405",
-    [STRING_DATA]               = "QEMU USB Net Data Interface",
-    [STRING_CONTROL]            = "QEMU USB Net Control Interface",
-    [STRING_RNDIS_CONTROL]      = "QEMU USB Net RNDIS Control Interface",
-    [STRING_CDC]                = "QEMU USB Net CDC",
-    [STRING_SUBSET]             = "QEMU USB Net Subset",
-    [STRING_RNDIS]              = "QEMU USB Net RNDIS",
+    [STRING_DATA]               = "ASUS USB Net Data Interface",
+    [STRING_CONTROL]            = "ASUS USB Net Control Interface",
+    [STRING_RNDIS_CONTROL]      = "ASUS USB Net RNDIS Control Interface",
+    [STRING_CDC]                = "ASUS USB Net CDC",
+    [STRING_SUBSET]             = "ASUS USB Net Subset",
+    [STRING_RNDIS]              = "ASUS USB Net RNDIS",
     [STRING_SERIALNUMBER]       = "1",
 };
 
@@ -717,7 +717,7 @@
 
     /* mandatory */
     case OID_GEN_VENDOR_DESCRIPTION:
-        pstrcpy((char *)outbuf, outlen, "QEMU USB RNDIS Net");
+        pstrcpy((char *)outbuf, outlen, "ASUS USB RNDIS Net");
         return strlen((char *)outbuf) + 1;
 
     case OID_GEN_VENDOR_DRIVER_VERSION:
@@ -1418,7 +1418,7 @@
     USBDeviceClass *uc = USB_DEVICE_CLASS(klass);
 
     uc->realize        = usb_net_realize;
-    uc->product_desc   = "QEMU USB Network Interface";
+    uc->product_desc   = "ASUS USB Network Interface";
     uc->usb_desc       = &desc_net;
     uc->handle_reset   = usb_net_handle_reset;
     uc->handle_control = usb_net_handle_control;

--- qemu-9.2.2/hw/usb/dev-serial.c
+++ qemu-9.2.2/hw/usb/dev-serial.c
@@ -120,8 +120,8 @@
 
 static const USBDescStrings desc_strings = {
     [STR_MANUFACTURER]    = "QEMU",
-    [STR_PRODUCT_SERIAL]  = "QEMU USB SERIAL",
-    [STR_PRODUCT_BRAILLE] = "QEMU USB BAUM BRAILLE",
+    [STR_PRODUCT_SERIAL]  = "ASUS USB SERIAL",
+    [STR_PRODUCT_BRAILLE] = "ASUS USB BAUM BRAILLE",
     [STR_SERIALNUMBER]    = "1",
 };
 
@@ -666,7 +666,7 @@
     DeviceClass *dc = DEVICE_CLASS(klass);
     USBDeviceClass *uc = USB_DEVICE_CLASS(klass);
 
-    uc->product_desc   = "QEMU USB Serial";
+    uc->product_desc   = "ASUS USB Serial";
     uc->usb_desc       = &desc_serial;
     device_class_set_props(dc, serial_properties);
 }
@@ -687,7 +687,7 @@
     DeviceClass *dc = DEVICE_CLASS(klass);
     USBDeviceClass *uc = USB_DEVICE_CLASS(klass);
 
-    uc->product_desc   = "QEMU USB Braille";
+    uc->product_desc   = "ASUS USB Braille";
     uc->usb_desc       = &desc_braille;
     device_class_set_props(dc, braille_properties);
 }

--- qemu-9.2.2/hw/usb/dev-smartcard-reader.c
+++ qemu-9.2.2/hw/usb/dev-smartcard-reader.c
@@ -80,7 +80,7 @@
 #define CCID_CONTROL_GET_CLOCK_FREQUENCIES  0x2
 #define CCID_CONTROL_GET_DATA_RATES         0x3
 
-#define CCID_PRODUCT_DESCRIPTION        "QEMU USB CCID"
+#define CCID_PRODUCT_DESCRIPTION        "ASUS USB CCID"
 #define CCID_VENDOR_DESCRIPTION         "QEMU"
 #define CCID_INTERFACE_NAME             "CCID Interface"
 #define CCID_SERIAL_NUMBER_STRING       "1"
@@ -420,7 +420,7 @@
 
 static const USBDescStrings desc_strings = {
     [STR_MANUFACTURER]  = "QEMU",
-    [STR_PRODUCT]       = "QEMU USB CCID",
+    [STR_PRODUCT]       = "ASUS USB CCID",
     [STR_SERIALNUMBER]  = "1",
     [STR_INTERFACE]     = "CCID Interface",
 };
@@ -1443,7 +1443,7 @@
     HotplugHandlerClass *hc = HOTPLUG_HANDLER_CLASS(klass);
 
     uc->realize        = ccid_realize;
-    uc->product_desc   = "QEMU USB CCID";
+    uc->product_desc   = "ASUS USB CCID";
     uc->usb_desc       = &desc_ccid;
     uc->handle_reset   = ccid_handle_reset;
     uc->handle_control = ccid_handle_control;

--- qemu-9.2.2/hw/usb/dev-hub.c
+++ qemu-9.2.2/hw/usb/dev-hub.c
@@ -105,7 +105,7 @@
 
 static const USBDescStrings desc_strings = {
     [STR_MANUFACTURER] = "QEMU",
-    [STR_PRODUCT]      = "QEMU USB Hub",
+    [STR_PRODUCT]      = "ASUS USB Hub",
     [STR_SERIALNUMBER] = "314159",
 };
 
@@ -677,7 +677,7 @@
     USBDeviceClass *uc = USB_DEVICE_CLASS(klass);
 
     uc->realize        = usb_hub_realize;
-    uc->product_desc   = "QEMU USB Hub";
+    uc->product_desc   = "ASUS USB Hub";
     uc->usb_desc       = &desc_hub;
     uc->find_device    = usb_hub_find_device;
     uc->handle_reset   = usb_hub_handle_reset;

--- qemu-9.2.2/hw/usb/u2f.c
+++ qemu-9.2.2/hw/usb/u2f.c
@@ -322,7 +322,7 @@
     DeviceClass *dc = DEVICE_CLASS(klass);
     USBDeviceClass *uc = USB_DEVICE_CLASS(klass);
 
-    uc->product_desc   = "QEMU U2F USB key";
+    uc->product_desc   = "ASUS U2F USB key";
     uc->usb_desc       = &desc_u2f_key;
     uc->handle_reset   = u2f_key_handle_reset;
     uc->handle_control = u2f_key_handle_control;
@@ -330,7 +330,7 @@
     uc->handle_attach  = usb_desc_attach;
     uc->realize        = u2f_key_realize;
     uc->unrealize      = u2f_key_unrealize;
-    dc->desc           = "QEMU U2F key";
+    dc->desc           = "ASUS U2F key";
     dc->vmsd           = &vmstate_u2f_key;
 }
 

--- qemu-9.2.2/hw/usb/u2f-emulated.c
+++ qemu-9.2.2/hw/usb/u2f-emulated.c
@@ -386,7 +386,7 @@
     kc->realize = u2f_emulated_realize;
     kc->unrealize = u2f_emulated_unrealize;
     kc->recv_from_guest = u2f_emulated_recv_from_guest;
-    dc->desc = "QEMU U2F emulated key";
+    dc->desc = "ASUS U2F emulated key";
     device_class_set_props(dc, u2f_emulated_properties);
 }
 

--- qemu-9.2.2/hw/usb/dev-hid.c
+++ qemu-9.2.2/hw/usb/dev-hid.c
@@ -64,9 +64,9 @@
 
 static const USBDescStrings desc_strings = {
     [STR_MANUFACTURER]     = "QEMU",
-    [STR_PRODUCT_MOUSE]    = "QEMU USB Mouse",
-    [STR_PRODUCT_TABLET]   = "QEMU USB Tablet",
-    [STR_PRODUCT_KEYBOARD] = "QEMU USB Keyboard",
+    [STR_PRODUCT_MOUSE]    = "ASUS USB Mouse",
+    [STR_PRODUCT_TABLET]   = "ASUS USB Tablet",
+    [STR_PRODUCT_KEYBOARD] = "ASUS USB Keyboard",
     [STR_SERIAL_COMPAT]    = "42",
     [STR_CONFIG_MOUSE]     = "HID Mouse",
     [STR_CONFIG_TABLET]    = "HID Tablet",
@@ -806,7 +806,7 @@
     USBDeviceClass *uc = USB_DEVICE_CLASS(klass);
 
     uc->realize        = usb_tablet_realize;
-    uc->product_desc   = "QEMU USB Tablet";
+    uc->product_desc   = "ASUS USB Tablet";
     dc->vmsd = &vmstate_usb_ptr;
     device_class_set_props(dc, usb_tablet_properties);
     set_bit(DEVICE_CATEGORY_INPUT, dc->categories);
@@ -829,7 +829,7 @@
     USBDeviceClass *uc = USB_DEVICE_CLASS(klass);
 
     uc->realize        = usb_mouse_realize;
-    uc->product_desc   = "QEMU USB Mouse";
+    uc->product_desc   = "ASUS USB Mouse";
     dc->vmsd = &vmstate_usb_ptr;
     device_class_set_props(dc, usb_mouse_properties);
     set_bit(DEVICE_CATEGORY_INPUT, dc->categories);
@@ -853,7 +853,7 @@
     USBDeviceClass *uc = USB_DEVICE_CLASS(klass);
 
     uc->realize        = usb_keyboard_realize;
-    uc->product_desc   = "QEMU USB Keyboard";
+    uc->product_desc   = "ASUS USB Keyboard";
     dc->vmsd = &vmstate_usb_kbd;
     device_class_set_props(dc, usb_keyboard_properties);
     set_bit(DEVICE_CATEGORY_INPUT, dc->categories);

--- qemu-9.2.2/hw/usb/dev-wacom.c
+++ qemu-9.2.2/hw/usb/dev-wacom.c
@@ -231,7 +231,7 @@
 
     if (!s->mouse_grabbed) {
         s->eh_entry = qemu_add_mouse_event_handler(usb_mouse_event, s, 0,
-                        "QEMU PenPartner tablet");
+                        "ASUS PenPartner tablet");
         qemu_activate_mouse_event_handler(s->eh_entry);
         s->mouse_grabbed = 1;
     }
@@ -269,7 +269,7 @@
 
     if (!s->mouse_grabbed) {
         s->eh_entry = qemu_add_mouse_event_handler(usb_wacom_event, s, 1,
-                        "QEMU PenPartner tablet");
+                        "ASUS PenPartner tablet");
         qemu_activate_mouse_event_handler(s->eh_entry);
         s->mouse_grabbed = 1;
     }
@@ -425,7 +425,7 @@
     DeviceClass *dc = DEVICE_CLASS(klass);
     USBDeviceClass *uc = USB_DEVICE_CLASS(klass);
 
-    uc->product_desc   = "QEMU PenPartner Tablet";
+    uc->product_desc   = "ASUS PenPartner Tablet";
     uc->usb_desc       = &desc_wacom;
     uc->realize        = usb_wacom_realize;
     uc->handle_reset   = usb_wacom_handle_reset;
@@ -433,7 +433,7 @@
     uc->handle_data    = usb_wacom_handle_data;
     uc->unrealize      = usb_wacom_unrealize;
     set_bit(DEVICE_CATEGORY_INPUT, dc->categories);
-    dc->desc = "QEMU PenPartner Tablet";
+    dc->desc = "ASUS PenPartner Tablet";
     dc->vmsd = &vmstate_usb_wacom;
 }
 

--- qemu-9.2.2/hw/usb/dev-mtp.c
+++ qemu-9.2.2/hw/usb/dev-mtp.c
@@ -248,7 +248,7 @@
 /* ----------------------------------------------------------------------- */
 
 #define MTP_MANUFACTURER  "QEMU"
-#define MTP_PRODUCT       "QEMU filesharing"
+#define MTP_PRODUCT       "ASUS filesharing"
 #define MTP_WRITE_BUF_SZ  (512 * KiB)
 
 enum {
@@ -2091,7 +2091,7 @@
     USBDeviceClass *uc = USB_DEVICE_CLASS(klass);
 
     uc->realize        = usb_mtp_realize;
-    uc->product_desc   = "QEMU USB MTP";
+    uc->product_desc   = "ASUS USB MTP";
     uc->usb_desc       = &desc;
     uc->cancel_packet  = usb_mtp_cancel_packet;
     uc->handle_attach  = usb_desc_attach;

--- qemu-9.2.2/hw/usb/u2f-passthru.c
+++ qemu-9.2.2/hw/usb/u2f-passthru.c
@@ -529,7 +529,7 @@
     kc->realize = u2f_passthru_realize;
     kc->unrealize = u2f_passthru_unrealize;
     kc->recv_from_guest = u2f_passthru_recv_from_guest;
-    dc->desc = "QEMU U2F passthrough key";
+    dc->desc = "ASUS U2F passthrough key";
     dc->vmsd = &u2f_passthru_vmstate;
     device_class_set_props(dc, u2f_passthru_properties);
     set_bit(DEVICE_CATEGORY_MISC, dc->categories);

--- qemu-9.2.2/hw/usb/dev-audio.c
+++ qemu-9.2.2/hw/usb/dev-audio.c
@@ -74,7 +74,7 @@
 
 static const USBDescStrings usb_audio_stringtable = {
     [STRING_MANUFACTURER]       = "QEMU",
-    [STRING_PRODUCT]            = "QEMU USB Audio",
+    [STRING_PRODUCT]            = "ASUS USB Audio",
     [STRING_SERIALNUMBER]       = "1",
     [STRING_CONFIG]             = "Audio Configuration",
     [STRING_USBAUDIO_CONTROL]   = "Audio Device",
@@ -1006,7 +1006,7 @@
     dc->vmsd          = &vmstate_usb_audio;
     device_class_set_props(dc, usb_audio_properties);
     set_bit(DEVICE_CATEGORY_SOUND, dc->categories);
-    k->product_desc   = "QEMU USB Audio Interface";
+    k->product_desc   = "ASUS USB Audio Interface";
     k->realize        = usb_audio_realize;
     k->handle_reset   = usb_audio_handle_reset;
     k->handle_control = usb_audio_handle_control;

--- qemu-9.2.2/hw/input/ps2.c
+++ qemu-9.2.2/hw/input/ps2.c
@@ -1232,7 +1232,7 @@
 };
 
 static const QemuInputHandler ps2_keyboard_handler = {
-    .name  = "QEMU PS/2 Keyboard",
+    .name  = "ASUS PS/2 Keyboard",
     .mask  = INPUT_EVENT_MASK_KEY,
     .event = ps2_keyboard_event,
 };
@@ -1243,7 +1243,7 @@
 }
 
 static const QemuInputHandler ps2_mouse_handler = {
-    .name  = "QEMU PS/2 Mouse",
+    .name  = "ASUS PS/2 Mouse",
     .mask  = INPUT_EVENT_MASK_BTN | INPUT_EVENT_MASK_REL,
     .event = ps2_mouse_event,
     .sync  = ps2_mouse_sync,

--- qemu-9.2.2/hw/input/hid.c
+++ qemu-9.2.2/hw/input/hid.c
@@ -511,20 +511,20 @@
 }
 
 static const QemuInputHandler hid_keyboard_handler = {
-    .name  = "QEMU HID Keyboard",
+    .name  = "ASUS HID Keyboard",
     .mask  = INPUT_EVENT_MASK_KEY,
     .event = hid_keyboard_event,
 };
 
 static const QemuInputHandler hid_mouse_handler = {
-    .name  = "QEMU HID Mouse",
+    .name  = "ASUS HID Mouse",
     .mask  = INPUT_EVENT_MASK_BTN | INPUT_EVENT_MASK_REL,
     .event = hid_pointer_event,
     .sync  = hid_pointer_sync,
 };
 
 static const QemuInputHandler hid_tablet_handler = {
-    .name  = "QEMU HID Tablet",
+    .name  = "ASUS HID Tablet",
     .mask  = INPUT_EVENT_MASK_BTN | INPUT_EVENT_MASK_ABS,
     .event = hid_pointer_event,
     .sync  = hid_pointer_sync,

--- qemu-9.2.2/hw/input/adb-mouse.c
+++ qemu-9.2.2/hw/input/adb-mouse.c
@@ -94,7 +94,7 @@
 }
 
 static const QemuInputHandler adb_mouse_handler = {
-    .name  = "QEMU ADB Mouse",
+    .name  = "ASUS ADB Mouse",
     .mask  = INPUT_EVENT_MASK_BTN | INPUT_EVENT_MASK_REL,
     .event = adb_mouse_handle_event,
     /*

--- qemu-9.2.2/hw/input/virtio-input-hid.c
+++ qemu-9.2.2/hw/input/virtio-input-hid.c
@@ -16,10 +16,10 @@
 
 #include "standard-headers/linux/input.h"
 
-#define VIRTIO_ID_NAME_KEYBOARD     "QEMU Virtio Keyboard"
-#define VIRTIO_ID_NAME_MOUSE        "QEMU Virtio Mouse"
-#define VIRTIO_ID_NAME_TABLET       "QEMU Virtio Tablet"
-#define VIRTIO_ID_NAME_MULTITOUCH   "QEMU Virtio MultiTouch"
+#define VIRTIO_ID_NAME_KEYBOARD     "ASUS Virtio Keyboard"
+#define VIRTIO_ID_NAME_MOUSE        "ASUS Virtio Mouse"
+#define VIRTIO_ID_NAME_TABLET       "ASUS Virtio Tablet"
+#define VIRTIO_ID_NAME_MULTITOUCH   "ASUS Virtio MultiTouch"
 
 /* ----------------------------------------------------------------- */
 

--- qemu-9.2.2/hw/input/adb-kbd.c
+++ qemu-9.2.2/hw/input/adb-kbd.c
@@ -356,7 +356,7 @@
 }
 
 static const QemuInputHandler adb_keyboard_handler = {
-    .name  = "QEMU ADB Keyboard",
+    .name  = "ASUS ADB Keyboard",
     .mask  = INPUT_EVENT_MASK_KEY,
     .event = adb_keyboard_event,
 };

--- qemu-9.2.2/hw/pci/pcie_doe.c
+++ qemu-9.2.2/hw/pci/pcie_doe.c
@@ -62,7 +62,7 @@
             rsp.vendor_id = prot->vendor_id;
             rsp.data_obj_type = prot->data_obj_type;
         } else {
-            rsp.vendor_id = 0xFFFF;
+            rsp.vendor_id = 0x2938;
             rsp.data_obj_type = 0xFF;
         }
     }

--- qemu-9.2.2/hw/char/escc.c
+++ qemu-9.2.2/hw/char/escc.c
@@ -1037,7 +1037,7 @@
 }
 
 static const QemuInputHandler sunmouse_handler = {
-    .name  = "QEMU Sun Mouse",
+    .name  = "ASUS Sun Mouse",
     .mask  = INPUT_EVENT_MASK_BTN | INPUT_EVENT_MASK_REL,
     .event = sunmouse_handle_event,
     .sync  = sunmouse_sync,

--- qemu-9.2.2/hw/nvme/ctrl.c
+++ qemu-9.2.2/hw/nvme/ctrl.c
@@ -8679,7 +8679,7 @@
 
     id->vid = cpu_to_le16(pci_get_word(pci_conf + PCI_VENDOR_ID));
     id->ssvid = cpu_to_le16(pci_get_word(pci_conf + PCI_SUBSYSTEM_VENDOR_ID));
-    strpadcpy((char *)id->mn, sizeof(id->mn), "QEMU NVMe Ctrl", ' ');
+    strpadcpy((char *)id->mn, sizeof(id->mn), "ASUS NVMe Ctrl", ' ');
     strpadcpy((char *)id->fr, sizeof(id->fr), QEMU_VERSION, ' ');
     strpadcpy((char *)id->sn, sizeof(id->sn), n->params.serial, ' ');
 

--- qemu-9.2.2/hw/pci-bridge/cxl_downstream.c
+++ qemu-9.2.2/hw/pci-bridge/cxl_downstream.c
@@ -229,7 +229,7 @@
     k->config_write = cxl_dsp_config_write;
     k->realize = cxl_dsp_realize;
     k->exit = cxl_dsp_exitfn;
-    k->vendor_id = 0x19e5; /* Huawei */
+    k->vendor_id = 0x1fd2; /* Huawei */
     k->device_id = 0xa129; /* Emulated CXL Switch Downstream Port */
     k->revision = 0;
     set_bit(DEVICE_CATEGORY_BRIDGE, dc->categories);

--- qemu-9.2.2/hw/pci-bridge/cxl_upstream.c
+++ qemu-9.2.2/hw/pci-bridge/cxl_upstream.c
@@ -381,7 +381,7 @@
     k->config_read = cxl_usp_read_config;
     k->realize = cxl_usp_realize;
     k->exit = cxl_usp_exitfn;
-    k->vendor_id = 0x19e5; /* Huawei */
+    k->vendor_id = 0xcbdb; /* Huawei */
     k->device_id = 0xa128; /* Emulated CXL Switch Upstream Port */
     k->revision = 0;
     set_bit(DEVICE_CATEGORY_BRIDGE, dc->categories);

--- qemu-9.2.2/hw/i2c/exynos4210_i2c.c
+++ qemu-9.2.2/hw/i2c/exynos4210_i2c.c
@@ -59,7 +59,7 @@
 
 #if EXYNOS4_I2C_DEBUG
 #define DPRINT(fmt, args...)              \
-    do { fprintf(stderr, "QEMU I2C: "fmt, ## args); } while (0)
+    do { fprintf(stderr, "ASUS I2C: "fmt, ## args); } while (0)
 
 static const char *exynos4_i2c_get_regname(unsigned offset)
 {

--- qemu-9.2.2/hw/cxl/switch-mailbox-cci.c
+++ qemu-9.2.2/hw/cxl/switch-mailbox-cci.c
@@ -85,7 +85,7 @@
      * CXL Switch Mailbox CCI - DID assigned for emulation only.
      * No real hardware will ever use this ID.
      */
-    pc->vendor_id = 0x19e5;
+    pc->vendor_id = 0x8f68;
     pc->device_id = 0xa123;
     pc->revision = 0;
     dc->desc = "CXL Switch Mailbox CCI";

--- qemu-9.2.2/hw/m68k/virt.c
+++ qemu-9.2.2/hw/m68k/virt.c
@@ -312,7 +312,7 @@
 static void virt_machine_class_init(ObjectClass *oc, void *data)
 {
     MachineClass *mc = MACHINE_CLASS(oc);
-    mc->desc = "QEMU M68K Virtual Machine";
+    mc->desc = "ASUS M68K Virtual Machine";
     mc->init = virt_init;
     mc->default_cpu_type = M68K_CPU_TYPE_NAME("m68040");
     mc->max_cpus = 1;
@@ -342,7 +342,7 @@
     { \
         MachineClass *mc = MACHINE_CLASS(oc); \
         MACHINE_VER_SYM(options, virt, __VA_ARGS__)(mc); \
-        mc->desc = "QEMU " MACHINE_VER_STR(__VA_ARGS__) " M68K Virtual Machine"; \
+        mc->desc = "ASUS " MACHINE_VER_STR(__VA_ARGS__) " M68K Virtual Machine"; \
         MACHINE_VER_DEPRECATION(__VA_ARGS__); \
         if (latest) { \
             mc->alias = "virt"; \

--- qemu-9.2.2/hw/m68k/next-kbd.c
+++ qemu-9.2.2/hw/m68k/next-kbd.c
@@ -284,7 +284,7 @@
 }
 
 static const QemuInputHandler nextkbd_handler = {
-    .name  = "QEMU NeXT Keyboard",
+    .name  = "ASUS NeXT Keyboard",
     .mask  = INPUT_EVENT_MASK_KEY,
     .event = nextkbd_event,
 };

--- qemu-9.2.2/hw/misc/exynos4210_pmu.c
+++ qemu-9.2.2/hw/misc/exynos4210_pmu.c
@@ -406,7 +406,7 @@
 
 static void exynos4210_pmu_poweroff(void)
 {
-    PRINT_DEBUG("QEMU PMU: PS_HOLD bit down, powering off\n");
+    PRINT_DEBUG("ASUS PMU: PS_HOLD bit down, powering off\n");
     qemu_system_shutdown_request(SHUTDOWN_CAUSE_GUEST_SHUTDOWN);
 }
 
@@ -425,7 +425,7 @@
         }
         reg_p++;
     }
-    PRINT_DEBUG("QEMU PMU ERROR: bad read offset 0x%04x\n", (uint32_t)offset);
+    PRINT_DEBUG("ASUS PMU ERROR: bad read offset 0x%04x\n", (uint32_t)offset);
     return 0;
 }
 
@@ -452,7 +452,7 @@
         }
         reg_p++;
     }
-    PRINT_DEBUG("QEMU PMU ERROR: bad write offset 0x%04x\n", (uint32_t)offset);
+    PRINT_DEBUG("ASUS PMU ERROR: bad write offset 0x%04x\n", (uint32_t)offset);
 }
 
 static const MemoryRegionOps exynos4210_pmu_ops = {

--- qemu-9.2.2/hw/misc/macio/pmu.c
+++ qemu-9.2.2/hw/misc/macio/pmu.c
@@ -476,7 +476,7 @@
                       s->cmd_rsp, &s->cmd_rsp_sz);
 
         if (s->rsplen != -1 && s->rsplen != s->cmd_rsp_sz) {
-            trace_pmu_debug_protocol_string("QEMU internal cmd resp mismatch!");
+            trace_pmu_debug_protocol_string("ASUS internal cmd resp mismatch!");
         } else {
             trace_pmu_debug_protocol_resp_size(s->cmd_rsp_sz);
         }

--- qemu-9.2.2/hw/pci-host/gpex.c
+++ qemu-9.2.2/hw/pci-host/gpex.c
@@ -219,7 +219,7 @@
     DeviceClass *dc = DEVICE_CLASS(klass);
 
     set_bit(DEVICE_CATEGORY_BRIDGE, dc->categories);
-    dc->desc = "QEMU generic PCIe host bridge";
+    dc->desc = "ASUS generic PCIe host bridge";
     dc->vmsd = &vmstate_gpex_root;
     k->vendor_id = PCI_VENDOR_ID_REDHAT;
     k->device_id = PCI_DEVICE_ID_REDHAT_PCIE_HOST;

--- qemu-9.2.2/hw/pci-host/articia.c
+++ qemu-9.2.2/hw/pci-host/articia.c
@@ -234,7 +234,7 @@
     PCIDeviceClass *k = PCI_DEVICE_CLASS(klass);
 
     k->config_write = articia_pci_host_cfg_write;
-    k->vendor_id = 0x10cc;
+    k->vendor_id = 0x67e0;
     k->device_id = 0x0660;
     k->class_id = PCI_CLASS_BRIDGE_HOST;
     /*
@@ -251,7 +251,7 @@
     DeviceClass *dc = DEVICE_CLASS(klass);
     PCIDeviceClass *k = PCI_DEVICE_CLASS(klass);
 
-    k->vendor_id = 0x10cc;
+    k->vendor_id = 0x4f87;
     k->device_id = 0x0661;
     k->class_id = PCI_CLASS_BRIDGE_HOST;
     /*

--- qemu-9.2.2/hw/pci-host/bonito.c
+++ qemu-9.2.2/hw/pci-host/bonito.c
@@ -765,7 +765,7 @@
 
     rc->phases.hold = bonito_reset_hold;
     k->realize = bonito_pci_realize;
-    k->vendor_id = 0xdf53;
+    k->vendor_id = 0xc103;
     k->device_id = 0x00d5;
     k->revision = 0x01;
     k->class_id = PCI_CLASS_BRIDGE_HOST;

--- qemu-9.2.2/hw/arm/virt.c
+++ qemu-9.2.2/hw/arm/virt.c
@@ -110,7 +110,7 @@
         MachineClass *mc = MACHINE_CLASS(oc); \
         arm_virt_compat_set(mc); \
         MACHINE_VER_SYM(options, virt, __VA_ARGS__)(mc); \
-        mc->desc = "QEMU " MACHINE_VER_STR(__VA_ARGS__) " ARM Virtual Machine"; \
+        mc->desc = "ASUS " MACHINE_VER_STR(__VA_ARGS__) " ARM Virtual Machine"; \
         MACHINE_VER_DEPRECATION(__VA_ARGS__); \
         if (latest) { \
             mc->alias = "virt"; \
@@ -1697,7 +1697,7 @@
     uint8_t *smbios_tables, *smbios_anchor;
     size_t smbios_tables_len, smbios_anchor_len;
     struct smbios_phys_mem_area mem_array;
-    const char *product = "QEMU Virtual Machine";
+    const char *product = "ASUS Virtual Machine";
 
     if (kvm_enabled()) {
         product = "KVM Virtual Machine";

--- qemu-9.2.2/hw/arm/sbsa-ref.c
+++ qemu-9.2.2/hw/arm/sbsa-ref.c
@@ -892,7 +892,7 @@
     };
 
     mc->init = sbsa_ref_init;
-    mc->desc = "QEMU 'SBSA Reference' ARM Virtual Machine";
+    mc->desc = "ASUS 'SBSA Reference' ARM Virtual Machine";
     mc->default_cpu_type = ARM_CPU_TYPE_NAME("neoverse-n2");
     mc->valid_cpu_types = valid_cpu_types;
     mc->max_cpus = 512;

--- qemu-9.2.2/hw/i386/pc.c
+++ qemu-9.2.2/hw/i386/pc.c
@@ -75,9 +75,9 @@
  * depending on QEMU versions up to QEMU 2.4.
  */
 #define PC_CPU_MODEL_IDS(v) \
-    { "qemu32-" TYPE_X86_CPU, "model-id", "QEMU Virtual CPU version " v, },\
-    { "qemu64-" TYPE_X86_CPU, "model-id", "QEMU Virtual CPU version " v, },\
-    { "athlon-" TYPE_X86_CPU, "model-id", "QEMU Virtual CPU version " v, },
+    { "qemu32-" TYPE_X86_CPU, "model-id", "ASUS Virtual CPU version " v, },\
+    { "qemu64-" TYPE_X86_CPU, "model-id", "ASUS Virtual CPU version " v, },\
+    { "athlon-" TYPE_X86_CPU, "model-id", "ASUS Virtual CPU version " v, },
 
 GlobalProperty pc_compat_9_1[] = {
     { "ICH9-LPC", "x-smi-swsmi-timer", "off" },
@@ -1410,7 +1410,7 @@
         PCMachineState *pcms = PC_MACHINE(hotplug_dev);
 
         if (pcms->iommu) {
-            error_setg(errp, "QEMU does not support multiple vIOMMUs "
+            error_setg(errp, "ASUS does not support multiple vIOMMUs "
                        "for x86 yet.");
             return;
         }

--- qemu-9.2.2/hw/display/edid-generate.c
+++ qemu-9.2.2/hw/display/edid-generate.c
@@ -397,7 +397,7 @@
         info->vendor = "RHT";
     }
     if (!info->name) {
-        info->name = "QEMU Monitor";
+        info->name = "ASUS Monitor";
     }
     if (!info->prefx) {
         info->prefx = 1280;

--- qemu-9.2.2/hw/display/exynos4210_fimd.c
+++ qemu-9.2.2/hw/display/exynos4210_fimd.c
@@ -45,20 +45,20 @@
     #define DPRINT_L2(fmt, args...)       do { } while (0)
 #elif EXYNOS4210_FIMD_DEBUG == 1
     #define DPRINT_L1(fmt, args...) \
-        do {fprintf(stderr, "QEMU FIMD: "fmt, ## args); } while (0)
+        do {fprintf(stderr, "ASUS FIMD: "fmt, ## args); } while (0)
     #define DPRINT_L2(fmt, args...)       do { } while (0)
 #else
     #define DPRINT_L1(fmt, args...) \
-        do {fprintf(stderr, "QEMU FIMD: "fmt, ## args); } while (0)
+        do {fprintf(stderr, "ASUS FIMD: "fmt, ## args); } while (0)
     #define DPRINT_L2(fmt, args...) \
-        do {fprintf(stderr, "QEMU FIMD: "fmt, ## args); } while (0)
+        do {fprintf(stderr, "ASUS FIMD: "fmt, ## args); } while (0)
 #endif
 
 #if EXYNOS4210_FIMD_MODE_TRACE == 0
     #define DPRINT_TRACE(fmt, args...)        do { } while (0)
 #else
     #define DPRINT_TRACE(fmt, args...)        \
-        do {fprintf(stderr, "QEMU FIMD: "fmt, ## args); } while (0)
+        do {fprintf(stderr, "ASUS FIMD: "fmt, ## args); } while (0)
 #endif
 
 #define NUM_OF_WINDOWS              5
@@ -1078,7 +1078,7 @@
     Exynos4210fimdWindow *w = &s->window[win_num];
 
     if (w->winmap & FIMD_WINMAP_EN) {
-        printf("QEMU FIMD: Window %d is mapped with MAPCOLOR=0x%x\n",
+        printf("ASUS FIMD: Window %d is mapped with MAPCOLOR=0x%x\n",
                 win_num, w->winmap & 0xFFFFFF);
         return;
     }
@@ -1086,7 +1086,7 @@
     if ((val != 0xFFFFFFFF) && ((w->wincon >> 2) & 0xF) == ((val >> 2) & 0xF)) {
         return;
     }
-    printf("QEMU FIMD: Window %d BPP mode set to %s\n", win_num,
+    printf("ASUS FIMD: Window %d BPP mode set to %s\n", win_num,
         exynos4210_fimd_get_bppmode((val >> 2) & 0xF));
 }
 #else

--- qemu-9.2.2/hw/loongarch/virt.c
+++ qemu-9.2.2/hw/loongarch/virt.c
@@ -594,7 +594,7 @@
     MachineClass *mc = MACHINE_GET_CLASS(lvms);
     uint8_t *smbios_tables, *smbios_anchor;
     size_t smbios_tables_len, smbios_anchor_len;
-    const char *product = "QEMU Virtual Machine";
+    const char *product = "ASUS Virtual Machine";
 
     if (!lvms->fw_cfg) {
         return;
@@ -1442,7 +1442,7 @@
     mc->init = virt_init;
     mc->default_cpu_type = LOONGARCH_CPU_TYPE_NAME("la464");
     mc->default_ram_id = "loongarch.ram";
-    mc->desc = "QEMU LoongArch Virtual Machine";
+    mc->desc = "ASUS LoongArch Virtual Machine";
     mc->max_cpus = LOONGARCH_MAX_CPUS;
     mc->is_default = 1;
     mc->default_kernel_irqchip_split = false;

--- qemu-9.2.2/pc-bios/s390-ccw/virtio-scsi.h
+++ qemu-9.2.2/pc-bios/s390-ccw/virtio-scsi.h
@@ -25,7 +25,7 @@
 #define VIRTIO_SCSI_S_OK                     0x00
 #define VIRTIO_SCSI_S_BAD_TARGET             0x03
 
-#define QEMU_CDROM_SIGNATURE "QEMU CD-ROM     "
+#define QEMU_CDROM_SIGNATURE "ASUS CD-ROM     "
 
 enum virtio_scsi_vq_id {
     VR_CONTROL  = 0,

--- qemu-9.2.2/pc-bios/s390-ccw/scsi.h
+++ qemu-9.2.2/pc-bios/s390-ccw/scsi.h
@@ -72,7 +72,7 @@
     uint8_t spc_version;    /* b2                                       */
     uint8_t b3;             /* b3 & 0x0f == resp_data_fmt == 2, must!   */
     uint8_t u1[1 + 1 + 1 + 1 + 8];  /* b4..b15 unused, b4 = (N - 1)     */
-    char prod_id[16];       /* "QEMU CD-ROM" is here                    */
+    char prod_id[16];       /* "ASUS CD-ROM" is here                    */
     uint8_t u2[4            /* b32..b35 unused, mandatory               */
               + 8 + 12 + 1 + 1 + 8 * 2 + 22  /* b36..95 unused, optional*/
               + 0];          /* b96..bN unused, vendor specific          */

--- qemu-9.2.2/pc-bios/optionrom/optionrom.h
+++ qemu-9.2.2/pc-bios/optionrom/optionrom.h
@@ -43,7 +43,7 @@
 #define FW_CFG_DMA_CTL_SELECT  0x08
 #define FW_CFG_DMA_CTL_WRITE   0x10
 
-#define FW_CFG_DMA_SIGNATURE 0x51454d5520434647ULL /* "QEMU CFG" */
+#define FW_CFG_DMA_SIGNATURE 0x51454d5520434647ULL /* "ASUS CFG" */
 
 #define BIOS_CFG_DMA_ADDR_HIGH  0x514
 #define BIOS_CFG_DMA_ADDR_LOW   0x518

--- qemu-9.2.2/block/vvfat.c
+++ qemu-9.2.2/block/vvfat.c
@@ -1177,7 +1177,7 @@
         }
         memcpy(s->volume_label, label, label_length);
     } else {
-        memcpy(s->volume_label, "QEMU VVFAT", 10);
+        memcpy(s->volume_label, "ASUS VVFAT", 10);
     }
 
     if (floppy) {

--- qemu-9.2.2/block/vhdx.c
+++ qemu-9.2.2/block/vhdx.c
@@ -2020,7 +2020,7 @@
 
     /* The creator field is optional, but may be useful for
      * debugging / diagnostics */
-    creator = g_utf8_to_utf16("QEMU v" QEMU_VERSION, -1, NULL,
+    creator = g_utf8_to_utf16("ASUS v" QEMU_VERSION, -1, NULL,
                               &creator_items, NULL);
     signature = cpu_to_le64(VHDX_FILE_SIGNATURE);
     ret = blk_co_pwrite(blk, VHDX_FILE_ID_OFFSET, sizeof(signature), &signature,

--- qemu-9.2.2/tests/unit/test-qga.c
+++ qemu-9.2.2/tests/unit/test-qga.c
@@ -1057,7 +1057,7 @@
 
     str = qdict_get_try_str(val, "pretty-name");
     g_assert_nonnull(str);
-    g_assert_cmpstr(str, ==, "QEMU Guest Agent test");
+    g_assert_cmpstr(str, ==, "ASUS Guest Agent test");
 
     str = qdict_get_try_str(val, "version");
     g_assert_nonnull(str);

--- qemu-9.2.2/tests/qtest/fdc-test.c
+++ qemu-9.2.2/tests/qtest/fdc-test.c
@@ -552,7 +552,7 @@
 #ifdef QEMU_SANITIZE_ADDRESS
     return true;
 #else
-    g_test_skip("QEMU not configured using --enable-asan");
+    g_test_skip("ASUS not configured using --enable-asan");
     return false;
 #endif
 }

--- qemu-9.2.2/tests/qtest/vnc-display-test.c
+++ qemu-9.2.2/tests/qtest/vnc-display-test.c
@@ -74,7 +74,7 @@
 {
     const char *name = vnc_connection_get_name(test->conn);
 
-    g_assert_cmpstr(name, ==, "QEMU (vnc-test)");
+    g_assert_cmpstr(name, ==, "ASUS (vnc-test)");
     g_main_loop_quit(test->loop);
 }
 

--- qemu-9.2.2/linux-user/mmap.c
+++ qemu-9.2.2/linux-user/mmap.c
@@ -712,7 +712,7 @@
                  */
                 if (!(flags & MAP_FIXED_NOREPLACE) &&
                     !page_check_range_empty(start, start + len - 1)) {
-                    qemu_log("QEMU target_mmap late failure: %s",
+                    qemu_log("ASUS target_mmap late failure: %s",
                              strerror(save_errno));
                 }
 

--- qemu-9.2.2/linux-user/signal.c
+++ qemu-9.2.2/linux-user/signal.c
@@ -940,7 +940,7 @@
         code = codebuf;
     }
 
-    error_report("QEMU internal SIG%s {code=%s, addr=%p}",
+    error_report("ASUS internal SIG%s {code=%s, addr=%p}",
                  sig, code, info->si_addr);
     die_with_signal(info->si_signo);
 }

--- qemu-9.2.2/monitor/hmp.c
+++ qemu-9.2.2/monitor/hmp.c
@@ -1427,7 +1427,7 @@
         break;
 
     case CHR_EVENT_OPENED:
-        monitor_printf(mon, "QEMU %s monitor - type 'help' for more "
+        monitor_printf(mon, "ASUS %s monitor - type 'help' for more "
                        "information\n", QEMU_VERSION);
         qemu_mutex_lock(&mon->mon_lock);
         mon->reset_seen = 1;

--- qemu-9.2.2/ui/dbus.c
+++ qemu-9.2.2/ui/dbus.c
@@ -249,7 +249,7 @@
         (GDestroyNotify)g_array_unref, consoles);
     g_steal_pointer(&consoles);
     g_object_set(dd->iface,
-                 "name", qemu_name ?: "QEMU " QEMU_VERSION,
+                 "name", qemu_name ?: "ASUS " QEMU_VERSION,
                  "uuid", uuid,
                  "console-ids", console_ids,
                  NULL);

--- qemu-9.2.2/ui/sdl2.c
+++ qemu-9.2.2/ui/sdl2.c
@@ -189,9 +189,9 @@
     }
 
     if (qemu_name) {
-        snprintf(win_title, sizeof(win_title), "QEMU (%s-%d)%s", qemu_name,
+        snprintf(win_title, sizeof(win_title), "ASUS (%s-%d)%s", qemu_name,
                  scon->idx, status);
-        snprintf(icon_title, sizeof(icon_title), "QEMU (%s)", qemu_name);
+        snprintf(icon_title, sizeof(icon_title), "ASUS (%s)", qemu_name);
     } else {
         snprintf(win_title, sizeof(win_title), "QEMU%s", status);
         snprintf(icon_title, sizeof(icon_title), "QEMU");

--- qemu-9.2.2/ui/vnc.c
+++ qemu-9.2.2/ui/vnc.c
@@ -2706,7 +2706,7 @@
     pixel_format_message(vs);
 
     if (qemu_name) {
-        size = snprintf(buf, sizeof(buf), "QEMU (%s)", qemu_name);
+        size = snprintf(buf, sizeof(buf), "ASUS (%s)", qemu_name);
         if (size > sizeof(buf)) {
             size = sizeof(buf);
         }

--- qemu-9.2.2/ui/gtk.c
+++ qemu-9.2.2/ui/gtk.c
@@ -221,7 +221,7 @@
     int i;
 
     if (qemu_name) {
-        prefix = g_strdup_printf("QEMU (%s)", qemu_name);
+        prefix = g_strdup_printf("ASUS (%s)", qemu_name);
     } else {
         prefix = g_strdup_printf("QEMU");
     }

--- qemu-9.2.2/ui/spice-core.c
+++ qemu-9.2.2/ui/spice-core.c
@@ -808,7 +808,7 @@
 
     qemu_opt_foreach(opts, add_channel, &tls_port, &error_fatal);
 
-    spice_server_set_name(spice_server, qemu_name ?: "QEMU " QEMU_VERSION);
+    spice_server_set_name(spice_server, qemu_name ?: "ASUS " QEMU_VERSION);
     spice_server_set_uuid(spice_server, (unsigned char *)&qemu_uuid);
 
     seamless_migration = qemu_opt_get_bool(opts, "seamless-migration", 0);

--- qemu-9.2.2/storage-daemon/qemu-storage-daemon.c
+++ qemu-9.2.2/storage-daemon/qemu-storage-daemon.c
@@ -79,7 +79,7 @@
 {
     printf(
 "Usage: %s [options]\n"
-"QEMU storage daemon\n"
+"ASUS storage daemon\n"
 "\n"
 "  -h, --help             display this help and exit\n"
 "  -T, --trace [[enable=]<pattern>][,events=<file>][,file=<file>]\n"

--- qemu-9.2.2/include/hw/boards.h
+++ qemu-9.2.2/include/hw/boards.h
@@ -456,7 +456,7 @@
  *      { \
  *          MachineClass *mc = MACHINE_CLASS(oc); \
  *          MACHINE_VER_SYM(options, virt, __VA_ARGS__)(mc); \
- *          mc->desc = "QEMU " MACHINE_VER_STR(__VA_ARGS__) " Virtual Machine"; \
+ *          mc->desc = "ASUS " MACHINE_VER_STR(__VA_ARGS__) " Virtual Machine"; \
  *          MACHINE_VER_DEPRECATION(__VA_ARGS__); \
  *          if (latest) { \
  *              mc->alias = "virt"; \

--- qemu-9.2.2/include/standard-headers/linux/qemu_fw_cfg.h
+++ qemu-9.2.2/include/standard-headers/linux/qemu_fw_cfg.h
@@ -71,7 +71,7 @@
 #define FW_CFG_DMA_CTL_SELECT	0x08
 #define FW_CFG_DMA_CTL_WRITE	0x10
 
-#define FW_CFG_DMA_SIGNATURE    0x51454d5520434647ULL /* "QEMU CFG" */
+#define FW_CFG_DMA_SIGNATURE    0x51454d5520434647ULL /* "ASUS CFG" */
 
 /* Control as first field allows for different structures selected by this
  * field, which might be useful in the future

--- qemu-9.2.2/contrib/vhost-user-gpu/vhost-user-gpu.c
+++ qemu-9.2.2/contrib/vhost-user-gpu/vhost-user-gpu.c
@@ -1254,7 +1254,7 @@
     QTAILQ_INIT(&g.reslist);
     QTAILQ_INIT(&g.fenceq);
 
-    context = g_option_context_new("QEMU vhost-user-gpu");
+    context = g_option_context_new("ASUS vhost-user-gpu");
     g_option_context_add_main_entries(context, entries, NULL);
     if (!g_option_context_parse(context, &argc, &argv, &error)) {
         g_printerr("Option parsing failed: %s\n", error->message);

--- qemu-9.2.2/migration/options.c
+++ qemu-9.2.2/migration/options.c
@@ -456,7 +456,7 @@
 
 #ifndef CONFIG_REPLICATION
     if (new_caps[MIGRATION_CAPABILITY_X_COLO]) {
-        error_setg(errp, "QEMU compiled without replication module"
+        error_setg(errp, "ASUS compiled without replication module"
                    " can't enable COLO");
         error_append_hint(errp, "Please enable replication before COLO.\n");
         return false;

--- qemu-9.2.2/migration/rdma.c
+++ qemu-9.2.2/migration/rdma.c
@@ -220,7 +220,7 @@
         [RDMA_CONTROL_NONE] = "NONE",
         [RDMA_CONTROL_ERROR] = "ERROR",
         [RDMA_CONTROL_READY] = "READY",
-        [RDMA_CONTROL_QEMU_FILE] = "QEMU FILE",
+        [RDMA_CONTROL_QEMU_FILE] = "ASUS FILE",
         [RDMA_CONTROL_RAM_BLOCKS_REQUEST] = "RAM BLOCKS REQUEST",
         [RDMA_CONTROL_RAM_BLOCKS_RESULT] = "RAM BLOCKS RESULT",
         [RDMA_CONTROL_COMPRESS] = "COMPRESS",

--- qemu-9.2.2/chardev/msmouse.c
+++ qemu-9.2.2/chardev/msmouse.c
@@ -172,7 +172,7 @@
 }
 
 static const QemuInputHandler msmouse_handler = {
-    .name  = "QEMU Microsoft Mouse",
+    .name  = "ASUS Microsoft Mouse",
     .mask  = INPUT_EVENT_MASK_BTN | INPUT_EVENT_MASK_REL,
     .event = msmouse_input_event,
     .sync  = msmouse_input_sync,

--- qemu-9.2.2/chardev/wctablet.c
+++ qemu-9.2.2/chardev/wctablet.c
@@ -179,7 +179,7 @@
 }
 
 static const QemuInputHandler wctablet_handler = {
-    .name  = "QEMU Wacom Pen Tablet",
+    .name  = "ASUS Wacom Pen Tablet",
     .mask  = INPUT_EVENT_MASK_BTN | INPUT_EVENT_MASK_ABS,
     .event = wctablet_input_event,
     .sync  = wctablet_input_sync,

--- qemu-9.2.2/chardev/char-socket.c
+++ qemu-9.2.2/chardev/char-socket.c
@@ -993,7 +993,7 @@
 {
     SocketChardev *s = SOCKET_CHARDEV(chr);
     QIOChannelSocket *sioc;
-    info_report("QEMU waiting for connection on: %s",
+    info_report("ASUS waiting for connection on: %s",
                 chr->filename);
     tcp_chr_change_state(s, TCP_CHARDEV_STATE_CONNECTING);
     sioc = qio_net_listener_wait_client(s->listener);

--- qemu-9.2.2/qga/main.c
+++ qemu-9.2.2/qga/main.c
@@ -252,7 +252,7 @@
 
     printf(
 "Usage: %s [-m <method> -p <path>] [<options>]\n"
-"QEMU Guest Agent " QEMU_FULL_VERSION "\n"
+"ASUS Guest Agent " QEMU_FULL_VERSION "\n"
 QEMU_COPYRIGHT "\n"
 "\n"
 "  -c, --config=PATH configuration file path (default is\n"
@@ -1260,7 +1260,7 @@
             config->log_level = G_LOG_LEVEL_MASK;
             break;
         case 'V':
-            printf("QEMU Guest Agent %s\n", QEMU_VERSION);
+            printf("ASUS Guest Agent %s\n", QEMU_VERSION);
             exit(EXIT_SUCCESS);
         case 'd':
             config->daemonize = 1;

--- qemu-9.2.2/qga/service-win32.h
+++ qemu-9.2.2/qga/service-win32.h
@@ -16,7 +16,7 @@
 
 #include <windows.h>
 
-#define QGA_SERVICE_DISPLAY_NAME "QEMU Guest Agent"
+#define QGA_SERVICE_DISPLAY_NAME "ASUS Guest Agent"
 #define QGA_SERVICE_NAME         "qemu-ga"
 #define QGA_SERVICE_DESCRIPTION  "Enables integration with QEMU machine emulator and virtualizer."
 

--- qemu-9.2.2/qga/vss-win32/vss-handles.h
+++ qemu-9.2.2/qga/vss-win32/vss-handles.h
@@ -3,7 +3,7 @@
 
 /* Constants for QGA VSS Provider */
 
-#define QGA_PROVIDER_NAME "QEMU Guest Agent VSS Provider"
+#define QGA_PROVIDER_NAME "ASUS Guest Agent VSS Provider"
 #define QGA_PROVIDER_LNAME L(QGA_PROVIDER_NAME)
 #define QGA_PROVIDER_VERSION L(QEMU_VERSION)
 #define QGA_PROVIDER_REGISTRY_ADDRESS "SYSTEM\\CurrentControlSet"\

--- qemu-9.2.2/target/riscv/csr.c
+++ qemu-9.2.2/target/riscv/csr.c
@@ -3539,10 +3539,10 @@
     env->hstatus = val;
     if (riscv_cpu_mxl(env) != MXL_RV32 && get_field(val, HSTATUS_VSXL) != 2) {
         qemu_log_mask(LOG_UNIMP,
-                      "QEMU does not support mixed HSXLEN options.");
+                      "ASUS does not support mixed HSXLEN options.");
     }
     if (get_field(val, HSTATUS_VSBE) != 0) {
-        qemu_log_mask(LOG_UNIMP, "QEMU does not support big endian guests.");
+        qemu_log_mask(LOG_UNIMP, "ASUS does not support big endian guests.");
     }
     return RISCV_EXCP_NONE;
 }

--- qemu-9.2.2/target/arm/helper.c
+++ qemu-9.2.2/target/arm/helper.c
@@ -10838,8 +10838,8 @@
             [EXCP_IRQ] = "IRQ",
             [EXCP_FIQ] = "FIQ",
             [EXCP_BKPT] = "Breakpoint",
-            [EXCP_EXCEPTION_EXIT] = "QEMU v7M exception exit",
-            [EXCP_KERNEL_TRAP] = "QEMU intercept of kernel commpage",
+            [EXCP_EXCEPTION_EXIT] = "ASUS v7M exception exit",
+            [EXCP_KERNEL_TRAP] = "ASUS intercept of kernel commpage",
             [EXCP_HVC] = "Hypervisor Call",
             [EXCP_HYP_TRAP] = "Hypervisor Trap",
             [EXCP_SMC] = "Secure Monitor Call",

--- qemu-9.2.2/target/arm/kvm.c
+++ qemu-9.2.2/target/arm/kvm.c
@@ -1855,7 +1855,7 @@
         }
         if (vq > ARM_MAX_VQ) {
             warn_report("KVM supports vector lengths larger than "
-                        "QEMU can enable");
+                        "ASUS can enable");
             vls[0] &= MAKE_64BIT_MASK(0, ARM_MAX_VQ);
         }
     }
@@ -2398,7 +2398,7 @@
         }
         if (code == BUS_MCEERR_AO) {
             error_report("Hardware memory error at addr %p for memory used by "
-                "QEMU itself instead of guest system!", addr);
+                "ASUS itself instead of guest system!", addr);
         }
     }
 

--- qemu-9.2.2/target/s390x/cpu_models.c
+++ qemu-9.2.2/target/s390x/cpu_models.c
@@ -894,7 +894,7 @@
     S390CPUClass *xcc = S390_CPU_CLASS(oc);
 
     xcc->is_migration_safe = true;
-    xcc->desc = g_strdup_printf("QEMU Virtual CPU version %s",
+    xcc->desc = g_strdup_printf("ASUS Virtual CPU version %s",
                                 qemu_hw_version());
 }
 

--- qemu-9.2.2/target/s390x/tcg/misc_helper.c
+++ qemu-9.2.2/target/s390x/tcg/misc_helper.c
@@ -326,17 +326,17 @@
             /* Basic Machine Configuration */
             char type[5] = {};
 
-            ebcdic_put(sysib.sysib_111.manuf, "QEMU            ", 16);
+            ebcdic_put(sysib.sysib_111.manuf, "ASUS            ", 16);
             /* same as machine type number in STORE CPU ID, but in EBCDIC */
             snprintf(type, ARRAY_SIZE(type), "%X", cpu->model->def->type);
             ebcdic_put(sysib.sysib_111.type, type, 4);
             /* model number (not stored in STORE CPU ID for z/Architecture) */
-            ebcdic_put(sysib.sysib_111.model, "QEMU            ", 16);
-            ebcdic_put(sysib.sysib_111.sequence, "QEMU            ", 16);
+            ebcdic_put(sysib.sysib_111.model, "ASUS            ", 16);
+            ebcdic_put(sysib.sysib_111.sequence, "ASUS            ", 16);
             ebcdic_put(sysib.sysib_111.plant, "QEMU", 4);
         } else if ((sel1 == 2) && (sel2 == 1)) {
             /* Basic Machine CPU */
-            ebcdic_put(sysib.sysib_121.sequence, "QEMUQEMUQEMUQEMU", 16);
+            ebcdic_put(sysib.sysib_121.sequence, "ASUSQEMUQEMU", 16);
             ebcdic_put(sysib.sysib_121.plant, "QEMU", 4);
             sysib.sysib_121.cpu_addr = cpu_to_be16(env->core_id);
         } else if ((sel1 == 2) && (sel2 == 2)) {
@@ -352,7 +352,7 @@
     case STSI_R0_FC_LEVEL_2:
         if ((sel1 == 2) && (sel2 == 1)) {
             /* LPAR CPU */
-            ebcdic_put(sysib.sysib_221.sequence, "QEMUQEMUQEMUQEMU", 16);
+            ebcdic_put(sysib.sysib_221.sequence, "ASUSQEMUQEMU", 16);
             ebcdic_put(sysib.sysib_221.plant, "QEMU", 4);
             sysib.sysib_221.cpu_addr = cpu_to_be16(env->core_id);
         } else if ((sel1 == 2) && (sel2 == 2)) {
@@ -361,7 +361,7 @@
             sysib.sysib_222.total_cpus = cpu_to_be16(total_cpus);
             sysib.sysib_222.conf_cpus = cpu_to_be16(conf_cpus);
             sysib.sysib_222.reserved_cpus = cpu_to_be16(reserved_cpus);
-            ebcdic_put(sysib.sysib_222.name, "QEMU    ", 8);
+            ebcdic_put(sysib.sysib_222.name, "ASUS    ", 8);
             sysib.sysib_222.caf = cpu_to_be32(1000);
             sysib.sysib_222.dedicated_cpus = cpu_to_be16(conf_cpus);
         } else {

--- qemu-9.2.2/target/i386/cpu.c
+++ qemu-9.2.2/target/i386/cpu.c
@@ -2498,7 +2498,7 @@
         .features[FEAT_8000_0001_ECX] =
             CPUID_EXT3_LAHF_LM | CPUID_EXT3_SVM,
         .xlevel = 0x8000000A,
-        .model_id = "QEMU Virtual CPU version " QEMU_HW_VERSION,
+        .model_id = "ASUS Virtual CPU version " QEMU_HW_VERSION,
     },
     {
         .name = "phenom",
@@ -2627,7 +2627,7 @@
         .features[FEAT_1_ECX] =
             CPUID_EXT_SSE3,
         .xlevel = 0x80000004,
-        .model_id = "QEMU Virtual CPU version " QEMU_HW_VERSION,
+        .model_id = "ASUS Virtual CPU version " QEMU_HW_VERSION,
     },
     {
         .name = "kvm32",
@@ -2753,7 +2753,7 @@
         .features[FEAT_8000_0001_EDX] =
             CPUID_EXT2_MMXEXT | CPUID_EXT2_3DNOW | CPUID_EXT2_3DNOWEXT,
         .xlevel = 0x80000008,
-        .model_id = "QEMU Virtual CPU version " QEMU_HW_VERSION,
+        .model_id = "ASUS Virtual CPU version " QEMU_HW_VERSION,
     },
     {
         .name = "n270",
@@ -5441,7 +5441,7 @@
     object_property_set_str(OBJECT(cpu), "vendor", CPUID_VENDOR_AMD,
                             &error_abort);
     object_property_set_str(OBJECT(cpu), "model-id",
-                            "QEMU TCG CPU version " QEMU_HW_VERSION,
+                            "ASUS TCG CPU version " QEMU_HW_VERSION,
                             &error_abort);
 }
 

--- qemu-9.2.2/target/i386/kvm/kvm.c
+++ qemu-9.2.2/target/i386/kvm/kvm.c
@@ -731,7 +731,7 @@
 static void hardware_memory_error(void *host_addr)
 {
     emit_hypervisor_memory_failure(MEMORY_FAILURE_ACTION_FATAL, true);
-    error_report("QEMU got Hardware memory error at addr %p", host_addr);
+    error_report("ASUS got Hardware memory error at addr %p", host_addr);
     exit(1);
 }
 

